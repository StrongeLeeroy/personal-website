{"version":3,"sources":["webpack:///./src/layouts/blog-tag-page.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/post-list.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_post_list__WEBPACK_IMPORTED_MODULE_3__","BlogTagPage","_ref","data","pageContext","allMarkdownRemark","a","createElement","title","tag","keywords","allTags","posts","edges","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","react_default","className","styles","headerWrapper","style","background","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Footer","objectDestructuringEmpty_default","Layout","display","minHeight","flexDirection","header","width","paddingTop","flex","footer","_755544856","node","gatsby__WEBPACK_IMPORTED_MODULE_2__","PostList","Fragment","map","_ref2","key","id","fields","slug","frontmatter","date","excerpt"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAmBeW,UAZK,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YACjBC,EAAsBF,EAAtBE,kBAER,OACIT,EAAAU,EAAAC,cAACT,EAAA,EAAD,KACIF,EAAAU,EAAAC,cAACR,EAAA,EAAD,CAAKS,MAAK,QAAUJ,EAAYK,IAAOC,SAAUN,EAAYO,UAC7Df,EAAAU,EAAAC,cAAA,UAAKH,EAAYK,KACjBb,EAAAU,EAAAC,cAACP,EAAA,EAAD,CAAUY,MAAOP,EAAkBQ,UAOxC,IAAMnB,EAAK,+CCrBlBJ,EAAAG,EAAAD,EAAA,sBAAAsB,IAAA,IAAAnB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAoB,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAAO,EAAAkB,GAAAE,EAAA3B,EAAA,IAAA4B,EAAA5B,EAAAO,EAAAoB,GAAA3B,EAAAG,EAAAD,EAAA,sBAAA0B,EAAAZ,IAAAhB,EAAA,SAYM6B,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvB1B,EAAAU,EAAAC,cAACY,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMnB,MACLqB,EAAgBF,EAAM5B,QAAU8B,EAAgBF,EAAM5B,OAAOS,MAEtDmB,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMnB,KAAOmB,EAAMnB,KAAKA,KAAOqB,EAAgBF,EAAM5B,OAAOS,MAGvDP,EAAAU,EAAAC,cAAA,uCA4BfO,EAAYa,UAAY,CACtBxB,KAAMyB,IAAUC,OAChBnC,MAAOkC,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAApC,GAAkB,IAAfqC,EAAerC,EAAfqC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEpB,IAAMb,cAAcqC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,uLCbf,SAASW,EAAT/C,GAAgE,IAAjDgD,EAAiDhD,EAAjDgD,YAAaC,EAAoCjD,EAApCiD,KAAMC,EAA8BlD,EAA9BkD,KAAM1C,EAAwBR,EAAxBQ,SAAUF,EAAcN,EAAdM,MACxC6C,EADsDC,EAAAnD,KACtDkD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAnD,EAAAC,cAACmD,EAAApD,EAAD,CACEqD,eAAgB,CACdR,QAEF3C,MAAOA,EACPoD,cAAa,QAAUP,EAAKG,aAAahD,MACzC4C,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAStD,GAEX,CACEuD,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAStD,GAEX,CACEqD,KAAI,sBACJC,QAASP,IAGVU,OACCvD,EAASwD,OAAS,EACd,CACEL,KAAI,WACJC,QAASpD,EAASyD,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACN1C,SAAU,GACVwC,YAAW,IAGbD,EAAItB,UAAY,CACduB,YAAatB,IAAUE,OACvBqB,KAAMvB,IAAUE,OAChBsB,KAAMxB,IAAUyC,QAAQzC,IAAUC,QAClCnB,SAAUkB,IAAUyC,QAAQzC,IAAUE,QACtCtB,MAAOoB,IAAUE,OAAOC,YAGXkB,2QC7FTqB,EAAS,SAAApE,GAAA,IAAGqE,EAAHrE,EAAGqE,UAAH,OACbC,EAAAlE,EAAAC,cAAA,UACEkE,UAAWC,IAAOC,cAClBC,MAAO,CACLC,WAAU,YAGZL,EAAAlE,EAAAC,cAAA,OACEqE,MAAO,CACLE,OAAM,SACNC,SAAU,IACVC,QAAO,eAGTR,EAAAlE,EAAAC,cAAA,MAAIqE,MAAO,CAAEE,OAAQ,IACnBN,EAAAlE,EAAAC,cAAC0E,EAAA,EAAD,CACEC,GAAG,IACHN,MAAO,CACLO,MAAK,QACLC,eAAc,SAGfb,OAOXD,EAAO3C,UAAY,CACjB4C,UAAW3C,IAAUE,QAGvBwC,EAAOF,aAAe,CACpBG,UAAS,IAGID,0BCtCTe,EAAS,SAAAnF,GAAA,OAAAoF,IAAApF,GACbsE,EAAAlE,EAAAC,cAAA,UACEqE,MAAO,CACLC,WAAU,YAGZL,EAAAlE,EAAAC,cAAA,OACEqE,MAAO,CACLE,OAAM,SACNC,SAAU,IACVC,QAAO,cAJX,oBAYJK,EAAO1D,UAAY,GAEnB0D,EAAOjB,aAAe,GAEPiB,QCXTE,UAAS,SAAArF,GAAA,IAAGwB,EAAHxB,EAAGwB,SAAH,OACb8C,EAAAlE,EAAAC,cAAC0E,EAAA,EAAD,CACEvF,MAAK,YASL+B,OAAQ,SAAAtB,GAAI,OACVqE,EAAAlE,EAAAC,cAAA,OAAKqE,MAAO,CACVY,QAAO,OACPC,UAAS,QACTC,cAAa,WAEblB,EAAAlE,EAAAC,cAACoF,EAAD,CAAQpB,UAAWpE,EAAKkD,KAAKG,aAAahD,QAC1CgE,EAAAlE,EAAAC,cAAA,OACEqE,MAAO,CACLE,OAAM,4BACNc,MAAO,IACPZ,QAAO,iBACPa,WAAY,EACZC,KAAM,IAGRtB,EAAAlE,EAAAC,cAAA,YAAOmB,IAOT8C,EAAAlE,EAAAC,cAACwF,EAAD,QAjCN5F,KAAA6F,MAuCFT,EAAO5D,UAAY,CACjBD,SAAUE,IAAUqE,KAAKlE,YAGZwD,wCC3Df,IAAA5F,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAoB,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAAO,EAAAkB,GAAAmF,EAAA5G,EAAA,KAIM6G,EAAW,SAAAjG,GAAA,IAAGU,EAAHV,EAAGU,MAAH,OACbhB,EAAAU,EAAAC,cAAAX,EAAAU,EAAA8F,SAAA,KACIxG,EAAAU,EAAAC,cAAA,UAAKK,EAAMsD,OAAX,UAEItD,EAAMyF,IAAI,SAAAC,GAAA,IAAGL,EAAHK,EAAGL,KAAH,OACNrG,EAAAU,EAAAC,cAAA,OAAKgG,IAAKN,EAAKO,IACX5G,EAAAU,EAAAC,cAAC2F,EAAA,EAAD,CAAMhB,GAAIe,EAAKQ,OAAOC,MAClB9G,EAAAU,EAAAC,cAAA,UACK0F,EAAKU,YAAYnG,MADtB,IAC8B,IAD9B,MACsCyF,EAAKU,YAAYC,OAG/DhH,EAAAU,EAAAC,cAAA,SAAI0F,EAAKY,cAOzBV,EAAS/B,aAAe,CACpBxD,MAAO,IAGXuF,EAASxE,UAAY,CACjBf,MAAOgB,IAAUyC,QAAQzC,IAAUC,SAGxBsE","file":"component---src-layouts-blog-tag-page-tsx-7b9389eaa20c030286e3.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport PostList from '../components/post-list';\r\n\r\n\r\nconst BlogTagPage = ({ data, pageContext }) => {\r\n    const { allMarkdownRemark } = data;\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title={`Tag: ${pageContext.tag}`} keywords={pageContext.allTags} />\r\n            <h3>{pageContext.tag}</h3>\r\n            <PostList posts={allMarkdownRemark.edges}/>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default BlogTagPage;\r\n\r\nexport const query = graphql`\r\n    query BlogPostsListByTag($tag: String) {\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            filter: { frontmatter: { tags: { in: [$tag] } } }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"DD MMMM, YYYY\")\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    excerpt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }): any {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n","import { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styles from './header.module.css';\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    className={styles.headerWrapper}\r\n    style={{\r\n      background: `#3a4758`\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `.5rem 1rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to='/'\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n};\r\n\r\nexport default Header;\r\n","import { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Footer = ({}) => (\r\n  <footer\r\n    style={{\r\n      background: `#444444`\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `5rem 1rem`,\r\n      }}\r\n    >\r\n      Footer content\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {};\r\n\r\nFooter.defaultProps = {};\r\n\r\nexport default Footer;\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <div style={{\r\n        display: `flex`,\r\n        minHeight: `100vh`,\r\n        flexDirection: `column`\r\n      }}>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `calc(1.45rem + 62px) auto`,\r\n            width: 960,\r\n            padding: `0px .5rem 1rem`,\r\n            paddingTop: 0,\r\n            flex: 1\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          {/* <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href='https://www.gatsbyjs.org'>Gatsby</a>\r\n          </footer> */}\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\n\r\nconst PostList = ({ posts }) => (\r\n    <>\r\n        <h4>{posts.length} posts</h4>\r\n        {\r\n            posts.map(({ node }) => (\r\n                <div key={node.id}>\r\n                    <Link to={node.fields.slug}>\r\n                        <h3>\r\n                            {node.frontmatter.title} {\" \"} - {node.frontmatter.date}\r\n                        </h3>\r\n                    </Link>\r\n                <p>{node.excerpt}</p>\r\n            </div>\r\n            ))\r\n        }\r\n    </>\r\n);\r\n\r\nPostList.defaultProps = {\r\n    posts: []\r\n}\r\n\r\nPostList.propTypes = {\r\n    posts: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default PostList;"],"sourceRoot":""}